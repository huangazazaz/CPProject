Program: ExtDefList;

ExtDefList:
      /* empty */
    | ExtDef ExtDefList;

ExtDef: 
      Specifier ExtDecList SEMI
    | Specifier SEMI
    | Specifier_FunDec_Recv CompSt;

Specifier_FunDec_Recv:
      Specifier FunDec;

ExtDecList:
      VarDec
    | VarDec COMMA ExtDecList;

Specifier:
      TYPE
    | StructSpecifier;

StructSpecifier:
      STRUCT ID LC DefList RC
    | STRUCT ID;

VarDec:
      ID
    | VarDec LB INT RB;

FunDec:
      ID LP VarList RP
    | ID LP RP;

VarList:
      ParamDec COMMA VarList
    | ParamDec;

ParamDec:
      Specifier VarDec;

CompSt:
      LC CompList RC;

Comp:
      Def
    | Stmt;

CompList:
      /* empty */
    | Comp CompList;

Stmt:
      Exp SEMI
    | CompSt
    | RETURN Exp SEMI
    | IF LP Exp RP Comp
    | IF LP Exp RP Comp ELSE Comp
    | WHILE LP Exp RP Comp
    | FOR LP Def Exp SEMI Exp RP Comp;

DefList:
      /* empty */
    | Def DefList;

Def:
      Specifier DecList SEMI;

DecList:
      Dec
    | Dec COMMA DecList;

Dec:
      VarDec
    | VarDec ASSIGN Exp;

Args:
      Exp COMMA Args
    | Exp;

Exp:
      Exp ASSIGN Exp
    | Exp PLUS_ASSIGN Exp
    | Exp MINUS_ASSIGN Exp
    | Exp MUL_ASSIGN Exp
    | Exp DIV_ASSIGN Exp
    | Exp AND Exp
    | Exp OR Exp
    | Exp LT Exp
    | Exp LE Exp
    | Exp GT Exp
    | Exp GE Exp
    | Exp NE Exp
    | Exp EQ Exp
    | Exp MOD Exp
    | Exp PLUS Exp
    | Exp MINUS Exp
    | Exp MUL Exp
    | Exp DIV Exp
    | Exp BOR Exp
    | Exp BAND Exp
    | Exp XOR Exp
    | LP Exp RP
    | MINUS Exp %prec LOWER_MINUS
    | PLUS Exp %prec LOWER_PLUS
    | NOT Exp
    | ID LP Args RP
    | ID LP RP
    | Exp LB Exp RB
    | Exp DOT ID
    | ID
    | BOOLEAN
    | INT
    | FLOAT
    | CHAR;
